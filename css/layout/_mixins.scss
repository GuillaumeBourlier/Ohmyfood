// CREATION DE MIXINS POUR LES STYLES REUTILISABLES, cette mixin permet de créer des styles au coeur avec des dégradés de couleur

// CREATION DE MIXINS POUR LES STYLES REUTILISABLES, cette mixin permet de créer des styles au cœur avec des dégradés de couleur

// Mixin pour appliquer des styles de cœur
@mixin heart($fw-thin, $c-white, $ft-sz-l, $fw-bld) {
    display: flex;
    align-items: center;
    cursor: pointer;

    // Cache la checkbox
    input {
        display: none;
    }

    // Label cliquable pour gérer l'état du cœur, le label est un élément associé à l'input (la case à cocher)
    & label {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: $ft-sz-l;
        cursor: pointer;
    }

    & .fa-heart {
        font-weight: $fw-thin;
        background: $c-white;
        background-clip: text;
        color: transparent;
        transition: transform 300ms ease-in-out, background 300ms ease-in-out;

        &:hover {
            font-weight: $fw-bld;
            @include button-gradient-inverted;
            background-clip: text;
            color: transparent;
            transform: scale(1.1);
        }
    }

   /* Applique le style à l'icône (fa-heart) lorsque la case à cocher (input) est activée */
    input:checked ~ label .fa-heart {
        font-weight: $fw-bld;
        @include button-gradient-inverted;
        background-clip: text;
        color: transparent;
        transform: scale(1.1);
    }
}

// Mixin pour appliquer un dégradé de couleur à un bouton
@mixin button-gradient {
    background: linear-gradient(0deg, rgba(147, 86, 220, 1) 0%, rgba(255, 121, 218, 1) 97%);
}

// Mixin pour appliquer un dégradé de couleur inversé à un bouton
@mixin button-gradient-inverted {
    background: linear-gradient(0deg, rgba(147, 86, 220, 1) 0%, rgba(255, 121, 218, 1) 97%);
}

// Mixin pour appliquer des styles spécifiques aux écrans de largeur minimale définie
@mixin media-min($_breakpoint) {
    @media screen and (min-width: $_breakpoint) {
        & { @content; }
    }
}